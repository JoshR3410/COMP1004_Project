#include <QApplication>
#include <QWidget>
#include <QVBoxLayout>
#include <QHBoxLayout>
#include <QLabel>
#include <QLineEdit>
#include <QPushButton>
#include "Basic Functions.cpp"

class PasswordManager : public QWidget {
    Q_OBJECT

public:
    PasswordManager(QWidget *parent = nullptr) : QWidget(parent) {
        QVBoxLayout *layout = new QVBoxLayout(this);

        QLabel *titleLabel = new QLabel("Vaultico", this);
        layout->addWidget(titleLabel);

        usernameLineEdit = new QLineEdit(this);
        usernameLineEdit->setPlaceholderText("Username");
        layout->addWidget(usernameLineEdit);

        passwordLineEdit = new QLineEdit(this);
        passwordLineEdit->setPlaceholderText("Password");
        passwordLineEdit->setEchoMode(QLineEdit::Password);
        layout->addWidget(passwordLineEdit);

        addButton = new QPushButton("Add", this);
        connect(addButton, &QPushButton::clicked, this, &PasswordManager::addButtonClicked);
        layout->addWidget(addButton);

        editButton = new QPushButton("Edit", this);
        connect(editButton, &QPushButton::clicked, this, &PasswordManager::editButtonClicked);
        layout->addWidget(editButton);

        deleteButton = new QPushButton("Delete", this);
        connect(deleteButton, &QPushButton::clicked, this, &PasswordManager::deleteButtonClicked);
        layout->addWidget(deleteButton);

        setLayout(layout);
    }

private slots:
    void addButtonClicked() {
        QString username = usernameLineEdit->text();
        QString password = passwordLineEdit->text();
        if (!username.isEmpty() && !password.isEmpty()) {
            addUser(username.toStdString(), password.toStdString());
            usernameLineEdit->clear();
            passwordLineEdit->clear();
        }
    }

    void editButtonClicked() {
        QString username = usernameLineEdit->text();
        QString password = passwordLineEdit->text();
        if (!username.isEmpty() && !password.isEmpty()) {
            editPassword(username.toStdString(), password.toStdString());
            usernameLineEdit->clear();
            passwordLineEdit->clear();
        }
    }

    void deleteButtonClicked() {
        QString username = usernameLineEdit->text();
        if (!username.isEmpty()) {
            deleteUser(username.toStdString());
            usernameLineEdit->clear();
            passwordLineEdit->clear();
        }
    }

private:
    QLineEdit *usernameLineEdit;
    QLineEdit *passwordLineEdit;
    QPushButton *addButton;
    QPushButton *editButton;
    QPushButton *deleteButton;
};

int main(int argc, char *argv[]) {
    QApplication app(argc, argv);

    PasswordManager manager;
    manager.setWindowTitle("Password Manager");
    manager.show();

    return app.exec();
}

#include "main.moc"
